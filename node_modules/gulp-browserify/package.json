{
  "name": "gulp-browserify",
  "version": "0.3.3",
  "description": "Bundle modules with Browserify",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/deepak1556/gulp-browserify"
  },
  "author": {
    "name": "Robo",
    "email": "hop2deep@gmail.com"
  },
  "contributors": [
    {
      "name": "Robo",
      "email": "hop2deep@gmail.com"
    },
    {
      "name": "Steve Lacy",
      "email": "me@slacy.me"
    },
    {
      "name": "Shuhei Kagawa",
      "email": "shuhei.kagawa@gmail.com"
    }
  ],
  "dependencies": {
    "browserify": "~3.20.0",
    "event-stream": "~3.1.0",
    "gulp-util": "~2.2.5",
    "browserify-shim": "~2.0.10",
    "readable-stream": "~1.1.10"
  },
  "main": "index.js",
  "engines": {
    "node": ">= 0.9"
  },
  "scripts": {
    "test": "mocha"
  },
  "devDependencies": {
    "mocha": "~1.15.1",
    "chai": "~1.8.1",
    "coffeeify": "~0.5.2"
  },
  "keywords": [
    "gulpplugin",
    "gulpfriendly",
    "browserify"
  ],
  "readme": "[![Build Status](https://travis-ci.org/deepak1556/gulp-browserify.png)](https://travis-ci.org/deepak1556/gulp-browserify)\r\n[![NPM version](https://badge.fury.io/js/gulp-browserify.png)](http://badge.fury.io/js/gulp-browserify)\r\n\r\n#[gulp](https://github.com/gulpjs/gulp)-browserify\r\n\r\n<table>\r\n<tr> \r\n<td>Package</td><td>gulp-browserify</td>\r\n</tr>\r\n<tr>\r\n<td>Description</td>\r\n<td>Bundle modules with BrowserifyJS</td>\r\n</tr>\r\n<tr>\r\n<td>Node Version</td>\r\n<td>>= 0.9</td>\r\n</tr>\r\n<tr>\r\n<td>Gulp Version</td>\r\n<td>3.x</td>\r\n\r\n</tr>\r\n</table>\r\n\r\n# Usage\r\n\r\n\r\n## Install\r\n\r\n```\r\nnpm install gulp-browserify --save\r\n```\r\n\r\n## Example\r\n\r\n```javascript\r\nvar gulp = require('gulp');\r\nvar browserify = require('gulp-browserify');\r\n\r\n// Basic usage\r\ngulp.task('basic', function(){\r\n\tgulp.src('./src/*.js')\r\n\t.pipe(browserify())\r\n\t.pipe(gulp.dest('./build/js'));\r\n});\r\n\r\n\r\n\r\ngulp.task('scripts', function() {\r\n\t//single entry point to browserify\r\n\tgulp.src(['src/js/*.js'])\r\n\t\t.pipe(browserify({\r\n\t\t  insertGlobals : true,\r\n\t\t  debug : true\r\n\t\t}))\r\n\t\t.pipe(gulp.dest('./build/js'))\r\n});\r\n\r\ngulp.task('default', function() {\r\n\tgulp.run('scripts');\r\n});\r\n```\r\n\r\nYou can view more examples in the [example folder.](https://github.com/stevelacy/gulp-browserify/tree/master/examples)\r\n\r\n### Options\r\n\r\n#### transform\r\n\r\nType : `[String || function]`\r\n\r\nSpecifies a pipeline of functions (or modules) through which the browserified bundle will be run. \r\n\r\nTransforms may not support input streams of browserify, since a temporary file is created to hold the contents of the input stream.\r\n\r\nFor example, coffeeify expects the file input to end with `.coffee` or `.litcoffee` extension. However the temp file create by browserify has a `.js` extension. Instead, use [gulp-coffee](https://github.com/wearefractal/gulp-coffee) to transform the input file contents before piping into gulp-browserify. Or you can stick with coffeeify using `gulp.src('./index.js', { read: false })` to preserve extension and giving `['.coffee', '.litcoffee']` to `extensions` option.\r\n\r\n#### debug\r\n\r\nType : `Boolean`\r\n\r\nEnable source map support\r\n\r\n#### extensions\r\n\r\nType: `[String]`\r\n\r\nArray of extensions that you want to skip in `require()` calls in addition to `.js` and `.json`. Don't forget `.`.\r\n\r\n#### Other Options\r\n\r\nAny other options you provide will be passed through to browserify. This is useful for setting things like `standalone` or `ignoreGlobals`.\r\n\r\n### Browserify-Shim\r\nExample configuration\r\n```javascript\r\ngulp.task('scripts', function() {\r\n\t//single entry point to browserify\r\n\tgulp.src(['src/index.js'])\r\n\t\t.pipe(browserify({\r\n\t\t  shim: {\r\n\t\t    angular: {\r\n                path: '/vendor/angular/angular.js',\r\n                exports: 'angular'\r\n\t\t    },\r\n            'angular-route': {\r\n                path: '/vendor/angular-route/angular-route.js',\r\n                exports: 'ngRoute',\r\n                depends: {\r\n                    angular: 'angular'\r\n                }\r\n            }\r\n\t\t  }\r\n\t\t}))\r\n\t\t.pipe(concat('dest.js'))\r\n\t\t.pipe(gulp.dest('./build'))\r\n});\r\n```\r\nMore information about configuring browserify-shim can be found [here](https://github.com/thlorenz/browserify-shim/blob/97d416cb3bc2ef531fae05a8eed4c86700ba4dc8/README.md).\r\n\r\n### Events\r\n\r\nOther than standard Node.js stream events, gulp-browserify emit its own events.\r\n\r\n#### prebundle\r\n\r\n```javascript\r\n.on('prebundle', function(bundler){})\r\n```\r\n\r\nEvent triggered just before invoking `bundler.bundle()` and provides bundler object to work with in the callback.\r\n\r\n#### postbundle\r\n\r\n```javascript\r\n.on('postbundle', function(src){})\r\n```\r\n\r\nEvent triggered after the bundle process is over and provides the bundled data as arguemnt to the callback.\r\n\r\n\r\n\r\n#License\r\n\r\nCopyright (c) 2014 Robo (deepak1556) https://github.com/deepak1556\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\r\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\r\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\r\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n",
  "readmeFilename": "README.md",
  "_id": "gulp-browserify@0.3.3",
  "dist": {
    "shasum": "a7e9a4b5cb296b6177d1600d304d79972808a9e3"
  },
  "_from": "gulp-browserify@",
  "_resolved": "https://registry.npmjs.org/gulp-browserify/-/gulp-browserify-0.3.3.tgz"
}
